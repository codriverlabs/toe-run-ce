name: Release

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  CONTROLLER_IMAGE: ghcr.io/codriverlabs/toe-controller
  COLLECTOR_IMAGE: ghcr.io/codriverlabs/toe-collector
  APERF_IMAGE: ghcr.io/codriverlabs/toe-aperf

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.24'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Build and push controller image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          ${{ env.CONTROLLER_IMAGE }}:${{ steps.version.outputs.VERSION }}
          ${{ env.CONTROLLER_IMAGE }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push collector image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: build/collector/Dockerfile
        push: true
        tags: |
          ${{ env.COLLECTOR_IMAGE }}:${{ steps.version.outputs.VERSION }}
          ${{ env.COLLECTOR_IMAGE }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push aperf image
      uses: docker/build-push-action@v6
      with:
        context: power-tools/aperf
        push: true
        platforms: linux/amd64,linux/arm64
        tags: |
          ${{ env.APERF_IMAGE }}:${{ steps.version.outputs.VERSION }}
          ${{ env.APERF_IMAGE }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate release artifacts
      run: |
        make github-release \
          IMG=${{ env.CONTROLLER_IMAGE }}:${{ steps.version.outputs.VERSION }} \
          VERSION=${{ steps.version.outputs.VERSION }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/release/*
        generate_release_notes: true
        draft: false
        prerelease: ${{ contains(steps.version.outputs.VERSION, 'beta') || contains(steps.version.outputs.VERSION, 'alpha') }}
        body: |
          ## ðŸ“¦ Container Images
          
          - **Controller**: `${{ env.CONTROLLER_IMAGE }}:${{ steps.version.outputs.VERSION }}`
          - **Collector**: `${{ env.COLLECTOR_IMAGE }}:${{ steps.version.outputs.VERSION }}`
          - **Aperf Tool**: `${{ env.APERF_IMAGE }}:${{ steps.version.outputs.VERSION }}`
          
          ## ðŸš€ Installation
          
          ```bash
          # Direct YAML install
          kubectl apply -f https://github.com/codriverlabs/toe/releases/download/${{ github.ref_name }}/toe-operator-${{ steps.version.outputs.VERSION }}.yaml
          
          # Helm install
          helm install toe-operator https://github.com/codriverlabs/toe/releases/download/${{ github.ref_name }}/toe-operator-1.0.0.tgz
          ```
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
